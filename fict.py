import numpy as np
import fcnm
import climage
import time

from climage import color_to_flags, color_types, convert




# Par√°metros del laberinto
ANCHO = 20
ALTO = 10

# Caracteres para el laberinto
PARED_HORIZONTAL = '-'
PARED_VERTICAL = '|'
ESQUINA = '+'
VACIO = ' '
JUGADOR = 'üë§'
HABILIDAD = 'üéì'
SALIDA = 'üö™'

def crear_laberinto(ancho, alto):
    laberinto = np.full((alto, ancho), VACIO, dtype=str)
    
    # Dibujar las paredes exteriores
    laberinto[0, :] = PARED_HORIZONTAL
    laberinto[-1, :] = PARED_HORIZONTAL
    laberinto[:, 0] = PARED_VERTICAL
    laberinto[:, -1] = PARED_VERTICAL
    laberinto[0, 0] = ESQUINA
    laberinto[0, -1] = ESQUINA
    laberinto[-1, 0] = ESQUINA
    laberinto[-1, -1] = ESQUINA
    
    # A√±adir paredes internas para crear un laberinto m√°s complejo
    laberinto[2, 2:8] = PARED_HORIZONTAL
    laberinto[4, 2:8] = PARED_HORIZONTAL
    laberinto[6, 2:8] = PARED_HORIZONTAL
    laberinto[2:8, 4] = PARED_VERTICAL
    laberinto[2:6, 6] = PARED_VERTICAL
    
    # A√±adir habilidad y salida
    laberinto[5, 3] = HABILIDAD  # Nueva posici√≥n de la habilidad
    laberinto[8, 18] = SALIDA    # Salida en la posici√≥n (8, 18)

    return laberinto

def imprimir_laberinto(laberinto, pos_jugador, tiene_habilidad):
    laberinto_con_jugador = laberinto.copy()
    y, x = pos_jugador
    laberinto_con_jugador[y, x] = JUGADOR
    
    if tiene_habilidad:
        laberinto_con_jugador[5, 3] = VACIO  # La habilidad desaparece despu√©s de recogerla
    
    for fila in laberinto_con_jugador:
        print("".join(fila))
    print()  # L√≠nea en blanco para separar cada impresi√≥n

def mover_jugador(posicion, direccion, laberinto):
    y, x = posicion
    if direccion == 'w' and laberinto[y - 1, x] != PARED_HORIZONTAL:
        y -= 1
    elif direccion == 's' and laberinto[y + 1, x] != PARED_HORIZONTAL:
        y += 1
    elif direccion == 'a' and laberinto[y, x - 1] != PARED_VERTICAL:
        x -= 1
    elif direccion == 'd' and laberinto[y, x + 1] != PARED_VERTICAL:
        x += 1
    return (y, x)


def main(puntaje_anterior):
    laberinto = crear_laberinto(ANCHO, ALTO)
    pos_jugador = (1, 1)  # Posici√≥n inicial del jugador
    tiene_habilidad = False  # El jugador empieza sin habilidad
    puntos = 0  # Puntuaci√≥n obtenida en el nivel actual
    
    print("Cap√≠tulo 4: FICT - El Laberinto de la Tierra")
    print("\n")

    time.sleep(3)
    print("Despu√©s de superar el desaf√≠o en FIMCP, se adentra en la Facultad de Ingenier√≠as en Ciencia de la Tierra (FICT). Esta facultad, llena de modelos geol√≥gicos, mapas topogr√°ficos y simulaciones de procesos naturales, es el pr√≥ximo escenario de tu aventura. Aqu√≠, enfrentar√°s un desaf√≠o que pondr√° a prueba tu habilidad para orientarte y tu ingenio.")
    print("\n")

    time.sleep(3)
    print("Al ingresar a FICT, te encuentras en un entorno que simula un vasto paisaje subterr√°neo, con t√∫neles y cavernas que se extienden en todas direcciones. Una pantalla hologr√°fica se activa y muestra un laberinto tridimensional que representa el desaf√≠o que debes enfrentar.")
    
    time.sleep(3)
    print("Un holograma de un ge√≥logo aparece y te dice:")
    time.sleep(3)
    print("Bienvenido a la Facultad de Ingenier√≠as en Ciencia de la Tierra. Para avanzar, debes atravesar nuestro laberinto subterr√°neo. Este laberinto est√° dise√±ado para simular los complejos sistemas geol√≥gicos que estudiamos aqu√≠. Solo encontrando la salida podr√°s continuar con tu b√∫squeda.")
    time.sleep(3)
    
    print("Instrucciones:")
    print("w - Mover hacia arriba")
    print("a - Mover hacia la izquierda")
    print("s - Mover hacia abajo")
    print("d - Mover hacia la derecha")
    print("Encuentra la habilidad (‚ö°) y la salida (E) para ganar.\n")
    
    juego_en_progreso = True
    
    while juego_en_progreso:
        imprimir_laberinto(laberinto, pos_jugador, tiene_habilidad)
        movimiento = input("Mover (w/a/s/d): ").strip()
        
        if movimiento in ('w', 'a', 's', 'd'):
            pos_jugador = mover_jugador(pos_jugador, movimiento, laberinto)
            
            if pos_jugador == (5, 3) and not tiene_habilidad:
                tiene_habilidad = True
                print("¬°Has recogido la habilidad!")
            
            if pos_jugador == (8, 18):
                if tiene_habilidad:
                    print("¬°Excelente trabajo! Has demostrado tu capacidad para orientarte en los complejos sistemas geol√≥gicos. Al superar el laberinto, has desbloqueado un fragmento del enigma que est√°s buscando. La comprensi√≥n de la Tierra te ha llevado un paso m√°s cerca de resolver el misterio final.")
                    print("\n")

                    time.sleep(3)
                    print("El laberinto se disuelve y revela una entrada secreta que te lleva a la siguiente facultad. Mientras avanzas hacia la salida, el holograma te da un √∫ltimo mensaje:")
                    print("\n")

                    time.sleep(3)
                    print("El camino hacia el conocimiento es a menudo complicado, pero con cada desaf√≠o superado, est√°s m√°s cerca de desvelar los secretos que buscas. Prep√°rate para la pr√≥xima etapa de tu aventura.")
                    print("\n")

                    time.sleep(3)
                    print("Con el laberinto superado, te preparas para tu pr√≥ximo destino, listo para enfrentar nuevos desaf√≠os en tu viaje.")
                    print("\n")

                    time.sleep(2)
                    puntos += 30
                    puntaje_total = puntaje_anterior + puntos
                    print(f"Tu puntaje total acumulado: {puntaje_total}")
                    juego_en_progreso = False
                else:
                    print("Necesitas la habilidad para pasar al siguiente nivel.")
    
    # Llamar a la funci√≥n principal de fcnm.py con el puntaje total acumulado
    fcnm.juego_calculo(puntaje_total)


if __name__ == "__main__":
    nombre_psj = "Jugador"  
    puntaje_anterior = 0  
    main(puntaje_anterior)
